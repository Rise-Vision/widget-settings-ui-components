!function(){"use strict";angular.module("risevision.widget.common.file-selector",["risevision.common.i18n","risevision.widget.common.storage-selector","risevision.widget.common.url-field"]).directive("fileSelector",["$templateCache","$log","$window",function(e,t,l){return{restrict:"E",require:"?ngModel",scope:{title:"@",fileLabel:"@",folderLabel:"@",companyId:"@",fileType:"@",selector:"="},template:e.get("_angular/file-selector/file-selector.html"),link:function(e,t,n,o){function i(e,t){var l,n=e.toLowerCase();switch(t){case"image":l=[".jpg",".jpeg",".png",".bmp",".svg",".gif"];break;case"video":l=[".webm",".mp4",".ogv",".ogg"];break;default:l=[]}for(var o=0,i=l.length;i>o;o++)if(-1!==n.indexOf(l[o]))return!0;return!1}function s(t){switch(t){case"single-file":e.fileBtnSelected=!0,e.folderBtnSelected=!1,e.customBtnSelected=!1;break;case"single-folder":e.fileBtnSelected=!1,e.folderBtnSelected=!0,e.customBtnSelected=!1;break;case"custom":e.fileBtnSelected=!1,e.folderBtnSelected=!1,e.customBtnSelected=!0;break;default:e.fileBtnSelected=!1,e.folderBtnSelected=!1,e.customBtnSelected=!1}}function r(e,t){var l,n,o,i,s,r,c;if("single-file"===t)l=e.split("storage.googleapis.com/risemedialibrary-")[1],l=decodeURIComponent(l.slice(l.indexOf("/")+1)),n=l.split("/"),s=n.pop(),r=n.length>0?n.join("/"):"",""!==r&&(r+="/"),c=r+s;else if("single-folder"===t){o=e.split("?");for(var a=0;a<o.length;a++)if(i=o[a].split("="),"prefix"===i[0]&&"undefined"!=typeof i[1]&&""!==i[1]){c=decodeURIComponent(i[1]);break}}return c}e.defaultSetting={selection:"",storageName:"",url:""},s(),e.selectorValid=!1,e.customInit=!1,e.defaults=function(e){if(e)for(var t=1,l=arguments.length;l>t;t++){var n=arguments[t];for(var o in n)void 0===e[o]&&(e[o]=n[o])}return e},e.onCustomBtnHandler=function(){e.selector.selection="custom",e.selector.url="",e.selector.storageName=""},e.previewFile=function(){l.open(e.selector.url,"_blank")},e.$on("picked",function(t,l,n){e.selector.selection=n,e.selector.storageName=r(l[0],e.selector.selection),e.selector.url=l[0]}),e.$watch("selectorValid",function(e){o&&o.$setValidity("selectorValid",e)}),e.$watch("selector",function(t){e.defaults(t,e.defaultSetting)}),e.$watch("selector.selection",function(t){"undefined"!=typeof t&&(s(t),"single-folder"===t?e.selectorValid=!0:"custom"===t&&(e.customInit=!0,e.selectorValid=!1))}),e.$watch("selector.url",function(t){"undefined"!=typeof t&&null!==t&&("single-file"===e.selector.selection&&"undefined"!=typeof e.fileType?e.selectorValid=i(t,e.fileType):"custom"===e.selector.selection&&e.customInit&&""!==t&&(e.customInit=!1,e.selectorValid=!0))})}}}])}(),function(e){try{e=angular.module("risevision.widget.common.file-selector")}catch(t){e=angular.module("risevision.widget.common.file-selector",[])}e.run(["$templateCache",function(e){"use strict";e.put("_angular/file-selector/file-selector.html",'<div class="form-group">\n  <label ng-if="title" class="control-label remove-bottom">{{ title }}</label>\n\n  <div class="row half-top half-bottom">\n    <div class="col-md-12">\n      <!-- Storage Single File - Button -->\n      <storage-selector selected="fileBtnSelected"\n                        company-id="{{companyId}}"\n                        type="single-file"\n                        label="{{ fileLabel }}"></storage-selector>\n      <!-- Storage Single Folder - Button -->\n      <storage-selector ng-if="folderLabel"\n                        selected="folderBtnSelected"\n                        company-id="{{companyId}}"\n                        type="single-folder"\n                        label="{{ folderLabel }}"></storage-selector>\n      <!-- Custom File - Button -->\n      <button name="customBtn" type="button" class="btn btn-default"\n              ng-class="{active: customBtnSelected}"\n              ng-click="onCustomBtnHandler()">{{ \'file-selector.buttons.custom\' | translate }}\n        <i class="fa fa-link fa-large"></i></button>\n    </div>\n  </div>\n\n  <!-- Storage Single File - Input -->\n  <div class="form-group" ng-if="selector.selection === \'single-file\'">\n    <div class="input-group custom-addon">\n      <input name="storage-file-name" type="text" class="form-control" ng-model="selector.storageName" readonly>\n      <span class="input-group-addon">\n        <button name="previewBtn" class="btn btn-default" ng-click="previewFile()">{{ \'file-selector.buttons.preview\' | translate }}\n          <img src="http://s3.amazonaws.com/Rise-Images/Icons/newtab-icon.png" class="storage-selector-icon icon-right">\n        </button>\n      </span>\n    </div>\n    <p ng-if="!selectorValid && fileType === \'image\'" class="text-danger">{{ "file-selector.errors.storage.image" | translate }}</p>\n    <p ng-if="!selectorValid && fileType === \'video\'" class="text-danger">{{ "file-selector.errors.storage.video" | translate }}</p>\n  </div>\n\n  <!-- Storage Single Folder - Input -->\n  <div ng-if="selector.selection === \'single-folder\'">\n    <input name="storage-folder-name" type="text" class="form-control" ng-model="selector.storageName" readonly>\n  </div>\n\n  <!-- Custom File - Input -->\n  <div ng-if="selector.selection === \'custom\'">\n    <url-field id="customUrl" name="customUrl" url="selector.url"\n               file-type="{{fileType}}"\n               hide-label="true"\n               ng-model="customurlentry" valid init-empty></url-field>\n  </div>\n</div>\n')}])}();